---

- name: Check machine name and assign to variable
  set_fact:
    machine: >-
      {% if 'web' in ansible_facts['nodename'] %}
      templates/web.j2
      {% elif 'lb' in ansible_facts['nodename'] %}
      templates/lb.j2
      {% elif 'bastion' in ansible_facts['nodename'] %}
      templates/bastion.j2
      {% else %}
      other_server
      {% endif %}

- name: Install iptables-persistent package
  apt:
    name: iptables-persistent
    state: present

- name: Ensure netfilter-persistent service is started and enabled
  service:
    name: netfilter-persistent
    state: started
    enabled: yes

- name: Creates directory
  ansible.builtin.file:
    path: /etc/iptables
    state: directory

- name: Inserting template of firewall rules
  ansible.builtin.template:
    src: "{{ machine | trim }}"
    dest: "/etc/iptables/rules.v4"
  notify:
        - Save iptables rules

- name: restore firewall state from a file
  community.general.iptables_state:
    state: restored
    path: /etc/iptables/rules.v4
  async: "{{ ansible_timeout }}"
  poll: 0

# iptables-persistent
# "iptables-save > /etc/iptables/rules.v4"
