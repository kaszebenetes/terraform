---

- name: Create www catalog
  ansible.builtin.file:
    path: "{{ nginx_index_path }}"
    state: directory
    mode: '0755'

- name: Create nginx config catalog
  ansible.builtin.file:
    path: "{{ nginx_config_path }}"
    state: directory
    mode: '0755'

- name: Copy over templated index.html
  ansible.builtin.template:
    # src: "{{ playbook_dir }}/vms/web_config/index.txt"
    # content: |
    #   this is text which will be copied over to the destination file
    src: index.nginx-debian.html
    dest: "{{ nginx_index_path }}"
    # remote_src: false
  register: index_file

- name: Copy over templated nginx.conf
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: "{{ nginx_config_path }}"

- name: Create project directory on the remote server
  file:
    path: "{{project_path}}"
    state: directory

# In case of use custom dockerfile , uncomment =======>

# - name: Copy Dockerfile to remote server
#   copy:
#     src: ./templates/Dockerfile
#     dest: "{{project_path}}"

# - name: Build image using cache source
#   docker_image:
#     name: web
#     build:
#       path: "{{project_path}}"
#       dockerfile: Dockerfile
#     source: build

#  <===================

#
- name: Pulling image from GHCR
  docker_image:
    name: kaszebenetes/terraform:feature-docker
    source: pull
    platform: https://ghcr.io

- name: Check if container is running
  shell: docker ps | grep "webserver"
  register: container_check
  ignore_errors: yes

- name: Uruchom kontener
  docker_container:
    name: web
    image: kaszebenetes/terraform:feature-docker
    # Dodaj tutaj dodatkowe opcje uruchamiania kontenera, np. porty, wolumeny
    ports:
      - "8080:80"
    volumes:
      - /var/www/html:/var/www/html

# - name: Run Docker
#   shell: docker run -d --name webserver -p 8080:80 -v /var/www/html:/var/www/html kobenginx
#   args:
#     chdir: "{{project_path}}"
#   when: container_check.rc != 0
